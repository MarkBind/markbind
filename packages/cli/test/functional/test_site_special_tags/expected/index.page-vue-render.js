
    const renderFn = new Function("const { createElementVNode: _createElementVNode, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, createStaticVNode: _createStaticVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", { id: \"functional-test-for-htmlparser2-and-markdown-it-patches-for-special-tags\" }, [\n  /*#__PURE__*/_createTextVNode(\"Functional test for htmlparser2 and markdown-it patches for special tags\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#functional-test-for-htmlparser2-and-markdown-it-patches-for-special-tags\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", { id: \"so-far-as-to-comply-with-the-commonmark-spec\" }, [\n  /*#__PURE__*/_createTextVNode(\"So far as to comply with the commonmark spec\"),\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    class: \"fa fa-anchor\",\n    href: \"#so-far-as-to-comply-with-the-commonmark-spec\",\n    onclick: \"event.stopPropagation()\"\n  })\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<p>There should be no text between this and the next <code class=\\\"hljs inline no-lang\\\">&lt;hr&gt;</code> tag in the browser, since it is a <code class=\\\"hljs inline no-lang\\\">&lt;script&gt;</code> tag.<br> There should be an alert with the value of 2 as well.</p><hr><p>There should be no text between this and the next <code class=\\\"hljs inline no-lang\\\">&lt;hr&gt;</code> tag in the browser, since it is a <code class=\\\"hljs inline no-lang\\\">&lt;style&gt;</code> tag.</p><hr><p>There should be text between this and the next <code class=\\\"hljs inline no-lang\\\">&lt;hr&gt;</code> tag, since it is a special tag. All text should appear in the browser window as a single line, save for the comment which the browser still interprets. (but will be in the expected output)</p>\", 5)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", null, \"//\", -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", null, \"/* ... */\", -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"This has the same content has the previous test, but it is \"),\n  /*#__PURE__*/_createElementVNode(\"strong\", null, \"not\"),\n  /*#__PURE__*/_createTextVNode(\" a special tag. The HTML comment \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"<!-- -->\"),\n  /*#__PURE__*/_createTextVNode(\" should disappear in the expected output. The line \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"some text\"),\n  /*#__PURE__*/_createTextVNode(\" should appear as per normal, and not wrapped by a paragraph since a HTML tag precedes it without a blank line. The other lines should be parsed as markdown paragraphs, as per commonmark spec.\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"//\", -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"p\", null, \"/* ... */\", -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"There are two self closing special tags below, which should display nothing, but are present in the output. There is then one special tag with both and opening and closing tag with some text in it (\"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"lorem ipsum...\"),\n  /*#__PURE__*/_createTextVNode(\"). Note that script and style tags are still not allowed to be self-closing, as per the html5 spec.\")\n], -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Lorem ipsum lorem ipsum\", -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"p\", null, [\n  /*#__PURE__*/_createTextVNode(\"This should pass the htmlparser2 patch but not the markdown-it patch as it violates commonmark.\"),\n  /*#__PURE__*/_createElementVNode(\"br\"),\n  /*#__PURE__*/_createTextVNode(\" All lines after the first \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"!success\"),\n  /*#__PURE__*/_createTextVNode(\" wrapping text will be wrapped in a \"),\n  /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"<p>...</p>\"),\n  /*#__PURE__*/_createTextVNode(\" tag as it is parsed as a markdown paragraph.\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"p\", null, \"if (x <= 5) { alert(x); }\", -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */)\n\nreturn function render(_ctx, _cache) {\n  const _component_these = _resolveComponent(\"these\")\n  const _component_testtag = _resolveComponent(\"testtag\")\n  const _component_abc = _resolveComponent(\"abc\")\n  const _component_testselfclosingtag = _resolveComponent(\"testselfclosingtag\")\n  const _component_scroll_top_button = _resolveComponent(\"scroll-top-button\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"p\", null, [\n      _hoisted_1,\n      _hoisted_2,\n      _hoisted_3,\n      _createVNode(_component_testtag, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_these, null, {\n            default: _withCtx(() => [\n              _createTextVNode(\" some text \")\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _hoisted_8,\n          _hoisted_9\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _hoisted_10,\n      _hoisted_11,\n      _createVNode(_component_abc, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_these, null, {\n            default: _withCtx(() => [\n              _createTextVNode(\" some text \")\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _hoisted_12,\n          _hoisted_13\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _hoisted_14,\n      _hoisted_15,\n      _createVNode(_component_testselfclosingtag),\n      _createVNode(_component_testselfclosingtag),\n      _createVNode(_component_testselfclosingtag, null, {\n        default: _withCtx(() => [\n          _hoisted_16\n        ]),\n        _: 1 /* STABLE */\n      }),\n      _hoisted_17,\n      _hoisted_18,\n      _createElementVNode(\"div\", null, [\n        _createVNode(_component_testtag, null, {\n          default: _withCtx(() => [\n            _createTextVNode(\" let x = 2; \"),\n            _hoisted_19\n          ]),\n          _: 1 /* STABLE */\n        })\n      ]),\n      _hoisted_20\n    ]),\n    _createVNode(_component_scroll_top_button)\n  ], 64 /* STABLE_FRAGMENT */))\n}");
    var render = renderFn();
  