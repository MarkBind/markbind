<span id="link" class="d-none">
<md>[_User Guide → Reusing Contents → Variables_]({{ baseUrl }}/userGuide/reusingContents.html#variables)</md>
</span>

## Variables

<span id="overview">

**Nunjucks [variables](https://mozilla.github.io/nunjucks/templating.html#set) are ideal for reusing small bits of code** in multiple places; you can define a variable to represent the code bit in question and reuse it anywhere in the site by referring to the variable instead of duplicating the code bit.
</span>

MarkBind does not aim to alter the already robust variable features of nunjucks, but provides several extensions to it.

### Global Variables

**Global variables are to be defined in the `_markbind/variables.md` file.** Each variable must have an `name` and the value can be any MarkBind-compliant code fragment. The `name` should not contain `-` and `.`. For example, `search-option` and `search.options` are not allowed.

The variables declared here are available from anywhere in the code base.

<div class="indented">

{{ icon_example }} Here's how you can define two variables `year` and `options`:

```html {.no-line-numbers}
<variable name="year">2018</variable>

<variable name="options">
* yes
* no
* maybe
</variable>
```
</div>

To include a variable value in your code, give the variable id enclosed in Nunjucks' double curly braces syntax.

<div class="indented">

{{ icon_example }} `The year was {% raw %}{{ year }}{% endraw %}.` {{ icon_arrow_right }} The year was 2018.

</div>

<box type="warning">

Global variables (`_markbind/variables.md`) will take precedence over any variables set via Nunjucks' tags (e.g. `{% raw %}{% set %}{% endraw %}`).
</box>

#### Built-in Global Variables

MarkBind also provides a number of built-in variables.

Variable | Notes | {{ icon_example }} | Output
--- | --- | --- | ---
`baseUrl` | Represents the root directory of the site on the server, as configured in your [site configuration]({{baseUrl}}/userGuide/siteJsonFile.html#baseurl) file. <br> Used for specifying [intra-site links](../formattingContents.html#intra-site-links). | If `baseUrl` is specified as `userGuide/`:<br><br> `<img src="{% raw %}{{baseUrl}}{% endraw %}/images/logo.png" />` | `<img src="userGuide/images/logo.png" />`
`timestamp` | The time stamp that indicates when the page was generated. <br><br> The [default]({{baseUrl}}/userGuide/siteJsonFile.html#timezone) values of `"timeZone"` and `"locale"` are `"UTC"` and `"en-GB"` respectively.  | The following example showcases the use of the `"Asia/Singapore"` time zone.<br><br> `Page generated at: {% raw %}{{timestamp}}{% endraw %}` | `Page generated at: {{ timestamp }}`
`MarkBind` | The MarkBind version in use, linked to the MarkBind website. | `Page generated by: {% raw %}{{MarkBind}}{% endraw %}`  | `Page generated by:` {{ MarkBind | safe }}


### Importing variables from other external file formats

You can also source variables from external files using MarkBind's {%raw%}`{% ext varName = "filepathToFile" %}`{%endraw%} Nunjucks extension.
This is useful if you have external datasets you want to display in your site!

To do so, assign a root variable name (`varName`) to the file path from the <tooltip content="similar to how you assign filepaths for other Nunjucks tags">root directory of the site</tooltip>. You may then access the file's variables using dot `varName.xx` or array `varName[i]` syntax, depending on the file's contents.



<tabs>

<tab header="Importing from JSON files">

{{icon_example}}

%%CODE:%%

<div class="indented">

{% raw %}
```html {heading="Displaying a student scoreboard stored as JSON"}
{% ext studentScoreboard = "userGuide/syntax/extra/scoreboard.json" %}

Student Number | Score | Rank
:----- | :-------: | ----
{% for student in studentScoreboard.students -%}
{{ student.number }} | {{ student.score }} | {{ student.rank }}
{% endfor %}

<small>Last updated at {{ studentScoreboard.lastUpdated }}</small>
```
{% endraw %}

<panel type="minimal" header="Json file used in example">

```json {heading="Json File"}
{% include "userGuide/syntax/extra/scoreboard.json" %}
```

</panel>
<br>

</div>

%%OUTPUT:%%
<div class="indented">

<box border-left-color="grey" background-color="white">

{% ext studentScoreboard = "userGuide/syntax/extra/scoreboard.json" %}

Student Number | Score | Rank
:----- | :-------: | ----
{% for student in studentScoreboard.students -%}
{{ student.number }} | {{ student.score }} / 100 | {{ student.rank }}
{% endfor %}

<small>Last updated at {{ studentScoreboard.lastUpdated }}</small>
</box>
</div>

</tab>
<tab header="Importing from CSV files">

{{icon_example}}

%%CODE:%%

<div class="indented">

{% raw %}
```html {heading="Displaying a student scoreboard stored as CSV"}
{% ext studentScoreboard = "userGuide/syntax/extra/scoreboard.csv" %}

Student Number | Score | Rank
:----- | :-------: | ----
{% for student in studentScoreboard -%}
{{ student.number }} | {{ student.score }} | {{ student.rank }}
{% endfor %}
```
{% endraw %}

<panel type="minimal" header="CSV file used in example">

```csv {heading="CSV File"}
{% include "userGuide/syntax/extra/scoreboard.csv" %}
```

</panel>
<br>

<box border-left-color="{{ markbind_blue}}">

{{ icon_bulb_blue }} If you do not want to have a header row, you can specify it by appending a `noHeader` option at the end of the variable declaration. In this example, it should be {% raw %} `{% ext studentScoreboard = "userGuide/syntax/extra/scoreboard.csv", noHeader %}` {% endraw %}. Elements have to be accessed using the `[]` operator (i.e. using `student[0]` to access student number instead of `student.number`).
</box>

</div>

%%OUTPUT:%%
<div class="indented">

<box border-left-color="grey" background-color="white">

{% ext studentScoreboard = "userGuide/syntax/extra/scoreboard.csv" %}

Student Number | Score | Rank
:----- | :-------: | ----
{% for student in studentScoreboard -%}
{{ student.number }} | {{ student.score }} / 100 | {{ student.rank }}
{% endfor %}

</box>
</div>

</tab>
</tabs>

<box type="info" seamless>

Only `.json` and `.csv` files are supported for now.
</box>


<span id="short" class="d-none">

Global variables:

`_markbind/variables.md`:
```html
<variable name="year">2018</span>
```

`The year was {% raw %}{{ year }}{% endraw %}.`

</span>
